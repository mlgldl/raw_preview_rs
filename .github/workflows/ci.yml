name: CI

on:
    push:
    pull_request:

jobs:
    build:
        name: Build and test on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                rust: [stable]
        steps:
            - uses: actions/checkout@v4

            - name: Install dependencies (macOS)
              if: matrix.os == 'macos-latest'
              run: |
                  brew update
                  brew install cmake autoconf automake libtool pkg-config

            - name: Install dependencies (Ubuntu)
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y build-essential cmake autoconf automake libtool pkg-config

            - name: Install dependencies (Windows)
              if: matrix.os == 'windows-latest'
              run: |
                  choco install cmake -y
                  choco install make -y

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.rust }}
                  profile: minimal
                  override: true

            - name: Cache cargo registry
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-

                        - name: Build package examples (if any)
                            run: |
                                    # Build package examples (no-op if none exist)
                                    cargo build --manifest-path package/Cargo.toml --examples || true

                        - name: Build and test
                            id: test
                            continue-on-error: true
                            run: |
                                    # Run tests (integration test will exercise the 8 cases directly)
                                    cargo test -v --workspace

                        - name: Upload build artifacts on failure
                            if: steps.test.outcome != 'success'
                            uses: actions/upload-artifact@v4
                            with:
                                    name: build-artifacts
                                    path: |
                                        **/target/**
                                    retention-days: 5

                        - name: Fail job if tests failed
                            if: steps.test.outcome != 'success'
                            run: |
                                    echo "Tests failed; uploaded examples artifacts for debugging."
                                    exit 1
